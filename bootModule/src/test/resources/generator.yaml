swagger: '2.0'
info:
  title: Generator
  description: Generator service
  version: 0.0.1
schemes:
  - https
produces:
  - application/json
paths:
  /next/:
    get:
      summary: Generate next number
      operationId: next
      parameters:
      - name: userId
        in: query
        required: true
        type: string
      responses:
        '200':
          description: Next number
          schema:
            type: integer
        '500':
          description: Unexpected error
  /scope:
    post:
      summary: Create a scope, should not allow to overwrite an existing one
      operationId: create
      parameters:
      - name: scope
        in: body
        required: true
        schema:
          $ref: '#/definitions/Scope'
        x-cucina-validated: true  
      responses:
        '200':
          description: Success
          schema:
            type: string
        '400':
          description: User error
          schema:
            $ref: '#/definitions/Error'
    get:
      summary: Load all scopes
      operationId: loadAll
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/Scope'
        '500':
          description: Unexpected error 
         
  /scope/userId/{userId}:
    put:
      summary: reset the scope
      operationId: resetScope
      parameters:
      - name: userId
        in: path
        required: true
        type: string
      responses:
        '200':
          description: Success
          schema:
            type: string
        '400': 
          description: User error
          schema:
            $ref: '#/definitions/Error'
    
definitions:
  Scope:
    type: object
    required:
    - userId
    - start
    - end
    x-cucina-annotations:
    - javax.validation.NotNull
    - javax.validation.Aha
    properties:
      start:
        type: integer
        description: Starting number of the scope 
        minimum: 1
      end:
        type: integer
        description: End number of the scope
        maximum: 100000
      current:
        type: integer
        description: current value
      userId:
        type: string
        description: user's id
        required: 
      autoReset:
        type: boolean
        default: true
        description: if enabled the scope restarts from the start when end is reached, otherwise emit an error.
      nextScope:
        $ref: '#/definitions/Scope'
  Error:
    type: object
    properties:
      message:
        type: string
        description: Error message
      code:
        type: string
        description: Error code        
